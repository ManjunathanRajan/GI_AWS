version: 0.2

phases:
  install:
    commands:
      - echo "Installing Packer..."
      - curl -o packer.zip https://releases.hashicorp.com/packer/1.7.8/packer_1.7.8_linux_amd64.zip
      - unzip packer.zip
      - rm -f packer.zip
      - chmod +x packer
      - sudo mv packer /usr/local/bin
  pre_build:
    commands:
      - echo "Setting up SSH key for GitHub authentication..."
      - yum update -y && yum install -y jq
      - export SSH_PRIVATE_KEY=$(aws secretsmanager get-secret-value --secret-id arn:aws:secretsmanager:us-west-2:716514200744:secret:github-ssh-wfDtpS --query SecretString --output text | jq -r '.private_key')
      - echo "$SSH_PRIVATE_KEY" > private_key.pem
      - chmod 400 private_key.pem
      - echo "Creating a custom SSH configuration file to use the private key..."
      - echo -e "Host github.com\n  HostName github.com\n  User git\n  IdentityFile $(pwd)/private_key.pem\n  IdentitiesOnly yes" > ssh_config
      - echo "Cloning the repository using SSH..."
      - GIT_SSH_COMMAND="ssh -F $(pwd)/ssh_config" git clone git@github.com:ManjunathanRajan/golden-image-windows.git
      - echo "Changing the working directory to the cloned repository..."
      - cd your-repo
      - echo "Setting Git user name and email for this repository..."
      - git config user.email "manjun566@gmail.com"
      - git config user.name "ManjunathanRajan"
      - echo "Fetching the latest commit from the os-release branch..."
      - git fetch origin os-release
      - git checkout FETCH_HEAD
  build:
    commands:
      - echo "Building Windows Packer AMI..."
      - packer validate packer-windows-ami.json
      - packer build packer-windows-ami.json
  post_build:
    commands:
      - echo "Switching to the main branch..."
      - git checkout main
      - echo "Creating a new tag and release with a descriptive title based on the os-release branch and pushing it to the main branch..."
      - NEW_TAG="GA-01"
      - TAG_TITLE="Golden Image Windows 2019-$NEW_TAG"
      - git tag -a $NEW_TAG -m "$TAG_TITLE"
      - git push origin $NEW_TAG
      - echo "Creating a new release with the same title..."
      - RELEASE_TITLE="$TAG_TITLE"
      - git release create -t "$RELEASE_TITLE" -n "$RELEASE_TITLE" $NEW_TAG
artifacts:
  files:
    - '**/*'
