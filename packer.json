{
  "variables": {
    "aws_region": "us-west-2",
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{user `aws_region`}}",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "source_ami_filter": {
        "filters": {
          "virtualization-type": "hvm",
          "name": "amzn2-ami-hvm-*-x86_64-gp2",
          "root-device-type": "ebs"
        },
        "owners": ["amazon"],
        "most_recent": true
      },
      "instance_type": "t2.micro",
      "ssh_username": "ec2-user",
      "ami_name": "my-golden-image-{{timestamp}}"
    }
  ],
  "provisioners": [
    {
      "type": "amazon-ssm",
      "region": "{{user `aws_region`}}",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "command": [
        "sudo yum update -y",
        "sudo yum install -y amazon-ssm-agent",
        "sudo systemctl enable amazon-ssm-agent",
        "sudo systemctl start amazon-ssm-agent",
        "sudo yum install -y git zip unzip",
        "echo 'Installing AWS CLI...'",
        "curl 'https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip' -o 'awscliv2.zip'",
        "unzip awscliv2.zip",
        "sudo ./aws/install",
        "echo 'Installing Docker...'",
        "sudo amazon-linux-extras install docker -y",
        "sudo systemctl enable docker",
        "sudo systemctl start docker",
        "sudo usermod -aG docker ec2-user",
        "echo 'Installing Node.js and npm...'",
        "curl -sL https://rpm.nodesource.com/setup_16.x | sudo bash -",
        "sudo yum install -y nodejs",
        "sudo mkdir /var/www/my-app",
        "sudo chown ec2-user /var/www/my-app",
        "cd /var/www/my-app",
        "cd my-app",
        "npm install",
        "echo '<h1>Hello World</h1>' > index.html",
        "npm start"
      ]
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true
    }
  ]
}
